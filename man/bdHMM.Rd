% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllClasses.R
\name{bdHMM}
\alias{bdHMM}
\title{Create a bdHMM object}
\usage{
bdHMM(initProb = numeric(), transMat = matrix(numeric(), ncol = 0, nrow =
  0), emission, nStates = numeric(), status = character(),
  stateNames = character(), dimNames = character(),
  transitionsOptim = "analytical", directedObs = integer(),
  dirScore = numeric())
}
\arguments{
\item{initProb}{Initial state probabilities.}

\item{transMat}{Transition probabilities}

\item{emission}{Emission parameters as an HMMEmission object.}

\item{nStates}{Number of states.}

\item{status}{Status of the bdHMM. 'Initial' means that the model was not fitted yet. 'EM' means that the model was optimized using Expectation maximization.}

\item{stateNames}{Indicates directinality of states. States can be forward (F1, F2, ..., Fn), reverse (R1, R2, ..., Rn) or undirectional (U1, U2, ..., Um). Number of F and R states must be equal and twin states are indicated by integers in id (e.g. F1 and R1 and twins).}

\item{dimNames}{Names of data tracks.}

\item{transitionsOptim}{There are three methods to choose from for fitting the transitions. Bidirectional transition matrices (invariant under reversal of time and direction) can be fitted using c('rsolnp', 'analytical'). 'None' uses standard update formulas and the resulting matrix is not constrained to be bidirectional.}

\item{directedObs}{An integer indicating which dimensions are directed. Undirected dimensions are 0. Directed observations must be marked as unique integer pairs. For instance c(0,0,0,0,0,1,1,2,2,3,3) contains 5 undirected observations, and thre pairs (one for each direction) of directed observations.}

\item{dirScore}{Directionlity score of states of a fitted bdHMM.}
}
\value{
bdHMM
}
\description{
This function creates a bdHMM function.
}
\examples{
nStates = 5
stateNames = c('F1', 'F2', 'R1', 'R2', 'U1')
means = list(4,11,4,11,-1)
Sigma = lapply(list(4,4,4,4,4), as.matrix)
transMat = matrix(1/nStates, nrow=nStates, ncol=nStates)
initProb = rep(1/nStates, nStates)
myEmission = list(d1=HMMEmission(type='Gaussian', parameters=list(mu=means, cov=Sigma), nStates=length(means)))

bdhmm = bdHMM(initProb=initProb, transMat=transMat, emission=myEmission, nStates=nStates, status='initial', stateNames=stateNames, transitionsOptim='none', directedObs=as.integer(0))

}
\seealso{
\code{\linkS4class{HMMEmission}}
}
